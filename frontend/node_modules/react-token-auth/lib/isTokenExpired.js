"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTokenExpired = void 0;
var base64_1 = require("./utils/base64");
exports.isTokenExpired = function (token, thresholdMillisec, logger) {
    return isTimestampExpired(jwtExp(token, logger), thresholdMillisec, logger);
};
var jwtExp = function (token, logger) {
    var split = token.split('.');
    logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'split', split);
    if (split.length < 2) {
        return null;
    }
    try {
        var middlePart = base64_1.Base64.decode(token.split('.')[1]);
        logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'middlePart', middlePart);
        var jwt = JSON.parse(middlePart);
        logger === null || logger === void 0 ? void 0 : logger.log('jwtExp', 'jwt', jwt);
        if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {
            return jwt.exp * 1000;
        }
        else {
            return null;
        }
    }
    catch (e) {
        // tslint:disable-next-line:no-console
        console.warn(e);
        return null;
    }
};
var isTimestampExpired = function (exp, thresholdMillisec, logger) {
    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'exp', exp);
    if (!exp) {
        return false;
    }
    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', 'Date.now()', Date.now());
    logger === null || logger === void 0 ? void 0 : logger.log('isTimestampExpired', '(thresholdMillisec ?? 0', thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);
    return Date.now() > exp - (thresholdMillisec !== null && thresholdMillisec !== void 0 ? thresholdMillisec : 0);
};
