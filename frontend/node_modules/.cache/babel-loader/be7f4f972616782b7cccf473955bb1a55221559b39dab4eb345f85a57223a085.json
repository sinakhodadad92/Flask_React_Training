{"ast":null,"code":"import { createAuthProvider } from 'react-token-auth';\n\n//export const [useAuth, authFetch, login, logout] = createAuthProvider({});\n// createAuthProvider({\n//   accessTokenKey: 'access_token',\n//   onUpdateToken: (token) => fetch('auth/refresh', {\n//     method: 'POST',\n//     body: token.refresh_token\n//   })\n//   .then(r => r.json())\n// });<\n\nexport const {\n  useAuth,\n  authFetch,\n  login,\n  logout\n} = createAuthProvider < Session > {\n  getAccessToken: session => session.accessToken,\n  storage: localStorage,\n  onUpdateToken: token => fetch('/update-token', {\n    method: 'POST',\n    body: token.refreshToken\n  }).then(r => r.json())\n};","map":{"version":3,"names":["createAuthProvider","useAuth","authFetch","login","logout","Session","getAccessToken","session","accessToken","storage","localStorage","onUpdateToken","token","fetch","method","body","refreshToken","then","r","json"],"sources":["/Users/sinakhodadad/Documents/Projects/Flask_React/frontend/src/auth.js"],"sourcesContent":["import { createAuthProvider } from 'react-token-auth';\n\n//export const [useAuth, authFetch, login, logout] = createAuthProvider({});\n  // createAuthProvider({\n  //   accessTokenKey: 'access_token',\n  //   onUpdateToken: (token) => fetch('auth/refresh', {\n  //     method: 'POST',\n  //     body: token.refresh_token\n  //   })\n  //   .then(r => r.json())\n// });<\n\nexport const { useAuth, authFetch, login, logout } = createAuthProvider<Session>({\n  getAccessToken: session => session.accessToken,\n  storage: localStorage,\n  onUpdateToken: token =>\n      fetch('/update-token', {\n          method: 'POST',\n          body: token.refreshToken,\n      }).then(r => r.json()),\n});"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,kBAAkB;;AAErD;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA,OAAO,MAAM;EAAEC,OAAO;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAO,CAAC,GAAGJ,kBAAkB,GAACK,OAAO,GAAE;EAC/EC,cAAc,EAAEC,OAAO,IAAIA,OAAO,CAACC,WAAW;EAC9CC,OAAO,EAAEC,YAAY;EACrBC,aAAa,EAAEC,KAAK,IAChBC,KAAK,CAAC,eAAe,EAAE;IACnBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEH,KAAK,CAACI;EAChB,CAAC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC;AAC3B,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}